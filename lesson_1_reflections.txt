How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It highlights the areas of the file that are different, making it easier 
    to scan through and see where the bug might be

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will make it easier to revert a change that caused a problem

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros of manually choosing are that it allows you to make a conscious 
    choice about versioning so you can have one feature/bug fix per commit. The
    cons are that you can lose your work if you don't remember to commit. The
    pros of automatic saving are that you don't have to think about saving things
    which eliminates some user error. The cons are that the versioning is less 
    precise since it is happening all the time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is focused on software development and you often have to touch multiple
    files at the same time in order to enact a change or bug fix, plus add tests.

How can you use the commands git log and git diff to view the history of files?

    git log shows the commit logs; git diff shows changes between commits

How might using version control make you more confident to make changes that
could break something?

    If you have a previous version, it is easy to roll it back if your change
    does break something

Now that you have your workspace set up, what do you want to try using Git for?

    The javascript class! And maybe making some projects. I want to learn all the
    things.
